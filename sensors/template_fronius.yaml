#templates for the fronius solar inverter
- platform: template
  sensors:
    fronius_inverter_operating_state_text:
      friendly_name: 'Fronius Operating State'
      entity_id: sensor.fronius_inverter_operating_state
      #Inverter Status reference codes
      #I_STATUS_OFF = 1 = Inverter is off
      #I_STATUS_SLEEPING = 2 = Auto shutdown
      #I_STATUS_STARTING = 3 = Inverter starting
      #I_STATUS_MPPT = 4 = Inverter working normally
      #I_STATUS_THROTTLED = 5 = Power reduction active
      #I_STATUS_SHUTTING_DOWN = 6 = Inverter shutting down
      #I_STATUS_FAULT = 7 = One or more faults present, see St*or Evt* register
      #I_STATUS_STANDBY = 8 = Standby
      #I_STATUS_NO_BUSINIT = 9 = No SolarNet communication
      #I_STATUS_NO_COMM_INV = 10 = No communication with inverter possible
      #I_STATUS_SN_OVERCURRENT = 11 = Overcurrent detected on SolarNet plug
      #I_STATUS_BOOTLOAD = 12 = Inverter is currently being updated
      #I_STATUS_AFCI = 13 = AFCI event (arc detection)
      value_template: >-
        {% if states.sensor.fronius_inverter_operating_state.state == '1' %}
          Inverter is off
        {% elif states.sensor.fronius_inverter_operating_state.state == '2' %}
          Auto shutdown
        {% elif states.sensor.fronius_inverter_operating_state.state == '3' %}
          Inverter starting
        {% elif states.sensor.fronius_inverter_operating_state.state == '4' %}
          Inverter working normally
        {% elif states.sensor.fronius_inverter_operating_state.state == '5' %}
          Power reduction active
        {% elif states.sensor.fronius_inverter_operating_state.state == '6' %}
          Inverter shutting down
        {% elif states.sensor.fronius_inverter_operating_state.state == '7' %}
          Fault
        {% elif states.sensor.fronius_inverter_operating_state.state == '8' %}
          Standby
        {% elif states.sensor.fronius_inverter_operating_state.state == '9' %}
          No SolarNet communication
        {% elif states.sensor.fronius_inverter_operating_state.state == '10' %}
          No inverter communication
        {% elif states.sensor.fronius_inverter_operating_state.state == '11' %}
          Overcurrent detected on SolarNet plug
        {% elif states.sensor.fronius_inverter_operating_state.state == '12' %}
          Inverter is currently being updated
        {% elif states.sensor.fronius_inverter_operating_state.state == '13' %}
          Arc fault current detected
        {% else %}
          n/a
        {% endif %}
#the inverter has a scale factor on the DC power register, the scale factor adjusts as the power increases.
#template sensors below read the scale factor and ajust the output accordingly
    fronius_inverter_dc1_power:
      friendly_name: "Fronius DC1 Power"
      entity_id: sensor.fronius_inverter_dc1_power_raw
      unit_of_measurement: 'W'
      value_template: >-
        {% if states.sensor.fronius_inverter_dc_power_scale_factor.state == '-1' %}
          {{ (states('sensor.fronius_inverter_dc1_power_raw')|float * 0.1)|round(1)}}
        {% elif states.sensor.fronius_inverter_dc_power_scale_factor.state == '-2' %}
          {{ (states('sensor.fronius_inverter_dc1_power_raw')|float * 0.01)|round(1)}}
        {% else %}
          n/a
        {% endif %}
    fronius_inverter_dc2_power:
      friendly_name: "Fronius DC2 Power"
      entity_id: sensor.fronius_inverter_dc2_power_raw
      unit_of_measurement: 'W'
      value_template: >-
        {% if states.sensor.fronius_inverter_dc_power_scale_factor.state == '-1' %}
          {{ (states('sensor.fronius_inverter_dc2_power_raw')|float * 0.1)|round(1)}}
        {% elif states.sensor.fronius_inverter_dc_power_scale_factor.state == '-2' %}
          {{ (states('sensor.fronius_inverter_dc2_power_raw')|float * 0.01)|round(1)}}
        {% else %}
          n/a
        {% endif %}

    fronius_meter_power_consumption:
      friendly_name: Grid Consumption
      icon_template: mdi:flash
      entity_id: sensor.fronius_meter_power
      unit_of_measurement: kW
      value_template: >-
        {% if states('sensor.fronius_meter_power')|float > 0 %}
          {{ (states('sensor.fronius_meter_power')|float / 1000)|round(2) }}
        {% else %}
          0|float
        {% endif %}

    fronius_meter_power_production:
      friendly_name: Grid Production
      icon_template: mdi:flash
      entity_id: sensor.fronius_meter_power
      unit_of_measurement: kW
      value_template: >-
        {% if states('sensor.fronius_meter_power')|float < 0 %}
          {{ (states('sensor.fronius_meter_power')|float / -1000)|round(2) }}
        {% else %}
          0|float
        {% endif %}
